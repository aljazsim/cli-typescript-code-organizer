import { getFileName, readFile, writeFile } from "./helpers/file-system-helper";

import { Configuration } from "./configuration/configuration";
import { organizeTypes } from "./helpers/code-helper";

export async function organizeSourceCodeFile(sourceCodeFilePath: string, configuration: Configuration)
{
    const sourceCodeFileName = getFileName(sourceCodeFilePath);
    let sourceCode = "";
    let organizedSourceCode = "";

    try 
    {
        sourceCode = await readFile(sourceCodeFilePath);
    }
    catch
    {
        return;
    }

    try 
    {
        organizedSourceCode = organizeSourceCode(sourceCode, sourceCodeFileName, configuration);
    }
    catch
    {
        return;
    }

    if (organizedSourceCode !== sourceCode)
    {
        await writeFile(sourceCodeFilePath, organizedSourceCode);
    }
}

export function organizeSourceCode(sourceCodeFileName: string, sourceCode: string, configuration: Configuration)
{
    const ignoreComment1Regex = new RegExp("//\\s*tsco:ignore");
    const ignoreComment2Regex = new RegExp("//\\s*<auto-generated\\s*/>");

    if (sourceCode &&
        !ignoreComment1Regex.test(sourceCode) &&
        !ignoreComment2Regex.test(sourceCode))
    {
        try 
        {
            return organizeTypes(sourceCode, sourceCodeFileName, configuration);
        }
        catch
        {
        }
    }

    return sourceCode;
}